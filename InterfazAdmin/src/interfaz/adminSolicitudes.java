/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import interfazadmin.Conector;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emilio
 */
public class adminSolicitudes extends javax.swing.JFrame {

    /**
     * Creates new form admin
     */
    String num;
    Connection conexion;
    DefaultTableModel m;
    Conector con;
    public adminSolicitudes() {
        initComponents();
        this.con = new Conector();
        this.setLocationRelativeTo(null);
        tabla.getTableHeader().setReorderingAllowed(false) ;
        mostrarTabla();
    }
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/auto.jpg"));
        return retValue;
    }
    public void mostrarTabla(){
        
        DefaultTableModel m = new DefaultTableModel();
        m.addColumn("Nombre");
        m.addColumn("Apellido");
        m.addColumn("Colonia");
        m.addColumn("Calle y numero");
        m.addColumn("Telefono");
        m.addColumn("Numero solicitud");
        m.addColumn("Costo");
        m.addColumn("Fecha solicitud");
        m.addColumn("Orden status");
        tabla.setModel(m);
        
        String sql = "SELECT infousuarios.nombre,"
                   + "infousuarios.apellido,"
                   + "infousuarios.colonia,"
                   + "infousuarios.calleYnumero,"
                   + "infousuarios.tel,"
                   + "solicitudes.numeroSolicitud,"
                   + "solicitudes.costo,"
                   + "solicitudes.fecha,"
                   + "solicitudes.ordenStatus"
                   + " FROM solicitudes"
                   + " INNER JOIN infousuarios ON "
                   + " solicitudes.idUsuario=infousuarios.id"
                   + " AND solicitudes.ordenStatus='espera'";
        
        String datos[]=new String[9];
        try{
            Conector.sentencia=Conector.con.createStatement();
            ResultSet r=Conector.sentencia.executeQuery(sql);
            while(r.next()){
                datos[0]=r.getString("nombre");
                datos[1]=r.getString("apellido");
                datos[2]=r.getString("colonia");
                datos[3]=r.getString("calleYnumero");
                datos[4]=r.getString("tel");
                datos[5]=r.getString("numeroSolicitud");
                datos[6]=r.getString("costo");
                datos[7]=r.getString("fecha");
                datos[8]=r.getString("ordenStatus");
                m.addRow(datos);
            }
            tabla.setModel(m);
        }catch(SQLException ex){
            Logger.getLogger(adminSolicitudes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSalir = new javax.swing.JButton();
        jActualiza = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de administraciÃ³n de solicitudes de clientes.");
        setIconImage(getIconImage());
        setPreferredSize(new java.awt.Dimension(750, 400));

        jSalir.setText("Salir");
        jSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalirActionPerformed(evt);
            }
        });

        jActualiza.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jActualiza.setText("Actualizar");
        jActualiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualizaActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null,  new Integer(4325), null, null, null, null},
                {null, null, "456", null, null, null},
                {null, null, null, null, null, null},
                {null, null, "456", "65", null, null}
            },
            new String [] {
                "Id", "NumPedido", "Nombre", "Apellido", "Costo", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(5);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
            tabla.getColumnModel().getColumn(5).setResizable(false);
        }

        jEliminar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jEliminar.setText("Actualizar Status");
        jEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jActualiza)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jEliminar)
                .addGap(168, 168, 168)
                .addComponent(jSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jActualiza)
                    .addComponent(jEliminar)
                    .addComponent(jSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jSalirActionPerformed

    private void jActualizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualizaActionPerformed
       mostrarTabla();
    }//GEN-LAST:event_jActualizaActionPerformed

    private void jEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarActionPerformed
        //Falta validar cuando no se selecciona nada
            int fila=tabla.getSelectedRow();
            String numSol=tabla.getValueAt(fila, 5).toString();
            int opcion=JOptionPane.showOptionDialog(
                                     null,
                                    "Que desea hacer con este solicitud?", 
                                    "Selector de opciones",
                                    JOptionPane.YES_NO_CANCEL_OPTION,
                                    JOptionPane.QUESTION_MESSAGE,
                                    null,
                                    new Object[] { "Completada", "Cancelada", "Nada"},
                                    "Administrador de empleados");

            if(opcion!=2){
                if(opcion==0){
                    opcion=JOptionPane.showOptionDialog(null, 
                        "Seguro que desea realiazar esta operacion?", 
                        "Seguro?", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, 
                        null, null, null);
                    if(opcion==0){
                        con.actualizar("Completada", "solicitudes", numSol);    
                    }
                }else{
                    opcion=JOptionPane.showOptionDialog(null, 
                        "Seguro que desea realiazar esta operacion?", 
                        "Seguro?", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, 
                        null, null, null);
                    if(opcion==0){
                        con.actualizar("Cancelada", "solicitudes", numSol);
                    }
                }
            }
            mostrarTabla();
        
    }//GEN-LAST:event_jEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jActualiza;
    private javax.swing.JButton jEliminar;
    private javax.swing.JButton jSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
